[{"C:\\Users\\master\\OneDrive\\문서\\cart-system\\src\\index.js":"1","C:\\Users\\master\\OneDrive\\문서\\cart-system\\src\\CartContext.js":"2","C:\\Users\\master\\OneDrive\\문서\\cart-system\\src\\App.js":"3","C:\\Users\\master\\OneDrive\\문서\\cart-system\\src\\pages\\cart.js":"4","C:\\Users\\master\\OneDrive\\문서\\cart-system\\src\\components\\productItem.js":"5","C:\\Users\\master\\OneDrive\\문서\\cart-system\\src\\components\\Pagination.js":"6","C:\\Users\\master\\OneDrive\\문서\\cart-system\\src\\components\\Header.js":"7","C:\\Users\\master\\OneDrive\\문서\\cart-system\\src\\components\\cartItem.js":"8","C:\\Users\\master\\OneDrive\\문서\\cart-system\\src\\pages\\products.js":"9"},{"size":289,"mtime":1607841700926,"results":"10","hashOfConfig":"11"},{"size":89,"mtime":1607843205540,"results":"12","hashOfConfig":"11"},{"size":1183,"mtime":1607849538028,"results":"13","hashOfConfig":"11"},{"size":578,"mtime":1607851811284,"results":"14","hashOfConfig":"11"},{"size":1999,"mtime":1607850897008,"results":"15","hashOfConfig":"11"},{"size":1204,"mtime":1607840542826,"results":"16","hashOfConfig":"11"},{"size":1440,"mtime":1607850839102,"results":"17","hashOfConfig":"11"},{"size":349,"mtime":1607851405697,"results":"18","hashOfConfig":"11"},{"size":1421,"mtime":1607764985910,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"14hdz9z",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\master\\OneDrive\\문서\\cart-system\\src\\index.js",[],"C:\\Users\\master\\OneDrive\\문서\\cart-system\\src\\CartContext.js",[],"C:\\Users\\master\\OneDrive\\문서\\cart-system\\src\\App.js",["42"],"import React, { useState, useMemo } from 'react';\nimport { Route } from 'react-router-dom';\nimport styled, { createGlobalStyle } from 'styled-components';\nimport { CartContext } from './CartContext';\nimport Header from './components/Header';\nimport Products from './pages/products';\nimport Cart from './pages/cart';\n\nconst GlobalStyle = createGlobalStyle`\n  @import url('https://fonts.googleapis.com/css2?family=Noto+Sans+KR:wght@300;400;500;700;900&display=swap');\n\n  body {\n    font-family: 'Noto Sans KR', sans-serif;\n  }\n`;\n\nconst Container = styled.div`\n  padding:  1em 9.3rem;\n\n  @media (max-width: 600px) {\n    & {\n      padding: 0 1em;\n      margin: 0 auto;\n    }\n  }\n`;\n\nconst App = () => {\n  let value;\n  constructor(props) {\n    super(props);\n    const [cartList, setCartList] = useState([])\n    value = useMemo(() => ({ cartList, setCartList }), [cartList, setCartList])\n  }\n\n  return (\n    <Container>\n      <GlobalStyle />\n      <CartContext.Provider value={value}>\n        <Header />\n        <Route path=\"/\" exact={true} component={Products} />\n        <Route path=\"/cart\" component={Cart} />\n      </CartContext.Provider>\n    </Container>\n  );\n};\n\nexport default App;","C:\\Users\\master\\OneDrive\\문서\\cart-system\\src\\pages\\cart.js",["43","44"],"import React, { useContext } from 'react';\r\nimport styled from 'styled-components';\r\nimport { CartContext } from '../CartContext';\r\nimport CartItem from '../components/cartItem';\r\n\r\nconst Container = styled.div`\r\n  h1 {\r\n    font-size: 1.5rem;\r\n  }\r\n\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: space-between;\r\n  align-content: stretch;\r\n`;\r\n\r\nconst Cart = () => {\r\n  const { cartList, setCartList } = useContext(CartContext);\r\n\r\n  return (\r\n    <Container>\r\n      <h1>CART</h1>\r\n      {JSON.stringify(cartList)}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Cart;","C:\\Users\\master\\OneDrive\\문서\\cart-system\\src\\components\\productItem.js",[],"C:\\Users\\master\\OneDrive\\문서\\cart-system\\src\\components\\Pagination.js",["45"],"import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Navigation = styled.nav`\r\n    display: block;\r\n    margin-top: 2em;\r\n    text-align: center;\r\n\r\n    li {\r\n        display: inline;\r\n        border: 1px solid #bdc3c7;\r\n        border-radius: 2px;\r\n        padding: 5px 12px;\r\n        font-weight: 400;\r\n        margin-right: 7px;\r\n        background-color: transparent;\r\n        transition: background-color 0.3s; border-color 0.3s; \r\n    }\r\n    li:hover {\r\n        background-color: #c0392b;\r\n        border: 1px solid #c0392b;\r\n        color: white;\r\n    }\r\n`\r\n\r\nconst Pagination = ({ postsPerPage, totalPosts, paginate }) => {\r\n  const pageNumbers = [];\r\n\r\n  for (let i = 1; i <= Math.ceil(totalPosts / postsPerPage); i++) {\r\n    pageNumbers.push(i);\r\n  }\r\n  return (\r\n    <Navigation>\r\n        <ul className=\"pagination\">\r\n            {pageNumbers.map(number => (\r\n                <a key={number} onClick={() => paginate(number)} className=\"page-link\">\r\n                    <li className=\"page-item\">\r\n                        {number}\r\n                    </li>\r\n                </a>\r\n            ))}\r\n        </ul>\r\n    </Navigation>\r\n  );\r\n};\r\n\r\nexport default Pagination;",["46","47"],"C:\\Users\\master\\OneDrive\\문서\\cart-system\\src\\components\\Header.js",[],"C:\\Users\\master\\OneDrive\\문서\\cart-system\\src\\components\\cartItem.js",[],"C:\\Users\\master\\OneDrive\\문서\\cart-system\\src\\pages\\products.js",["48","49"],{"ruleId":null,"fatal":true,"severity":2,"message":"50","line":30,"column":22},{"ruleId":"51","severity":1,"message":"52","line":4,"column":8,"nodeType":"53","messageId":"54","endLine":4,"endColumn":16},{"ruleId":"51","severity":1,"message":"55","line":18,"column":21,"nodeType":"53","messageId":"54","endLine":18,"endColumn":32},{"ruleId":"56","severity":1,"message":"57","line":36,"column":17,"nodeType":"58","endLine":36,"endColumn":88},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"51","severity":1,"message":"63","line":1,"column":27,"nodeType":"53","messageId":"54","endLine":1,"endColumn":37},{"ruleId":"64","severity":1,"message":"65","line":38,"column":73,"nodeType":"66","endLine":38,"endColumn":89},"Parsing error: Unexpected token, expected \";\"\n\n  28 | const App = () => {\n  29 |   let value;\n> 30 |   constructor(props) {\n     |                      ^\n  31 |     super(props);\n  32 |     const [cartList, setCartList] = useState([])\n  33 |     value = useMemo(() => ({ cartList, setCartList }), [cartList, setCartList])","no-unused-vars","'CartItem' is defined but never used.","Identifier","unusedVar","'setCartList' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-native-reassign",["67"],"no-negated-in-lhs",["68"],"'useContext' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-global-assign","no-unsafe-negation"]